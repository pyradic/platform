{{ asset_add('platform.js', 'platform::js/platform.js', [ 'webpack:pyro__platform:scripts' ]) }}

{% if config('webpack.enabled') and config('webpack.middleware.enabled') %}
    <!--WEBPACK_HERE_PLEASE-->
{% else %}
    {{ asset_public_script("assets/js/pyro__platform.js") }}

    {% for script in platform.publicScripts %}
        {{ asset_public_script(script) }}
    {% endfor %}
    {% for style in platform.publicStyles %}
        {{ asset_public_style(style) }}
    {% endfor %}

{#    {{ asset_public_script("assets/js/pyro__admin_theme.js") }}#}
{#    {{ asset_public_script("assets/js/pyro__permission_tree.js") }}#}
{#    {{ asset_public_script("assets/js/pyro__menus.js") }}#}
{% endif %}

<!-- PLATFORM_DATA -->
<script>
    var PLATFORM_DATA = JSON.parse('{{ platform.data.toJson | raw }}');
</script>

<!-- PLATFORM_CONFIG & PLATFORM_PROVIDERS -->
<script>
    var PLATFORM_CONFIG = JSON.parse('{{ platform.config.toJson | raw }}');
    var PLATFORM_PROVIDERS = [{{ platform.providers | join(', ') }}];
</script>

{{ asset_inline('platform_pre_boot') }}

<script>
    (function () {
        var app = this.pyro.pyro__platform.Application.instance;
        var log = app.createLog('cp_scripts');
        var install = pyro.pyro__platform.install;

        log({
            t:this,
            pyro,
            tpyro:this.pyro,
            pyro_platform:pyro.pyro__platform,
            pyro_platform_provider:pyro.pyro__platform.PlatformServiceProvider,
            tpyro_platform_provider:this.pyro.pyro__platform.PlatformServiceProvider,
        })
        app
            .bootstrap({
                providers: [
                    this.pyro.pyro__platform.PlatformServiceProvider
                ]
            }, {
                config   : PLATFORM_CONFIG,
                providers: PLATFORM_PROVIDERS
            })
            .then(function (app) {
                return app.boot();
            })
            .then(function (app) {
                // Vue.use(pyro.platform.Plugin);
                app.extendRoot({
                    mounted: function () {
                        $.holdReady(false);
                    }
                });
                app.start('#main');
            });
    }.call(window,window));
</script>
